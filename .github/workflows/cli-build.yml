name: Build CLI

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '**/*.md'
      - '**/*.png'
      - '**/*.jpg'
      - '**/*.jpeg'
      - '**/*.gif'
      - '**/*.svg'
      - '**/*.ico'
      - '**/*.webp'
  pull_request:
    branches: [ main ]
    paths-ignore:
      - '**/*.md'
      - '**/*.png'
      - '**/*.jpg'
      - '**/*.jpeg'
      - '**/*.gif'
      - '**/*.svg'
      - '**/*.ico'
      - '**/*.webp'
  workflow_dispatch:

jobs:
  build:
    environment: build
    name: Build and Test
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'graalvm' # See 'Supported distributions' for available options
          java-version: '21'
      - run: mvn clean install

      - name: Upload JAR
        uses: actions/upload-artifact@v4
        with:
          name: waver-jar
          path: target/waver-cli-*.jar

  native-linux:
    name: Build Native Linux
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: '21'
          distribution: 'graalvm'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          native-image-job-reports: 'true'
      - run: mvn clean install

      - name: Build Native Image
        run: mvn package -Pnative

      - name: Upload Linux Native Executable
        uses: actions/upload-artifact@v4
        with:
          name: waver-linux
          path: target/waver-cli

  native-macos:
    name: Build Native macOS (Apple Silicon)
    needs: build
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: '21'
          distribution: 'graalvm'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          native-image-job-reports: 'true'
      - run: mvn clean install

      - name: Build Native Image
        run: mvn package -Pnative

      - name: Upload macOS Native Executable
        uses: actions/upload-artifact@v4
        with:
          name: waver-macos
          path: target/waver-cli

  native-windows:
    name: Build Native Windows
    needs: build
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Visual Studio Developer Command Prompt
        uses: microsoft/setup-msbuild@v1.1

      - name: Set up Visual C++ Build Tools
        shell: powershell
        run: |
          # Add Visual C++ build tools to PATH
          $vsPath = & "${env:ProgramFiles(x86)}\Microsoft Visual Studio\Installer\vswhere.exe" -latest -property installationPath
          $vcvarsallPath = Join-Path $vsPath "VC\Auxiliary\Build\vcvarsall.bat"
          
          # Create a batch file to set up the environment
          Set-Content -Path setup-env.bat -Value "@call `"$vcvarsallPath`" x64"
          
          # Execute the batch file and export the environment variables
          cmd /c "setup-env.bat && set > env-vars.txt"
          
          # Read the environment variables and set them for the current process
          Get-Content env-vars.txt | ForEach-Object {
            if ($_ -match "^([^=]+)=(.*)$") {
              $name = $matches[1]
              $value = $matches[2]
              # Set environment variable for the current process
              [System.Environment]::SetEnvironmentVariable($name, $value)
              # Also set it for GitHub Actions
              echo "$name=$value" >> $env:GITHUB_ENV
            }
          }

      - name: Set up GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: '21'
          distribution: 'graalvm'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          native-image-job-reports: 'true'
      - run: mvn clean install

      - name: Build Native Image
        run: mvn package -Pnative

      - name: Upload Windows Native Executable
        uses: actions/upload-artifact@v4
        with:
          name: waver-windows
          path: target/waver-cli.exe
