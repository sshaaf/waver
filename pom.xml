<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 
         http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>dev.shaaf.waver.cli</groupId>
    <artifactId>waver-cli</artifactId>
    <version>0.1.0</version>
    <packaging>jar</packaging>

    <name>Waver CLI</name>
    <description>Command Line Interface for Waver</description>

    <properties>
        <maven.compiler.source>21</maven.compiler.source>
        <maven.compiler.target>21</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <!-- Dependency versions -->
        <langchain4j.version>1.0.0</langchain4j.version>
        <langchain4j.openai.version>1.0.0</langchain4j.openai.version>
        <langchain4j.gemini.version>1.0.0-beta5</langchain4j.gemini.version>
        <slf4j.version>2.0.17</slf4j.version>
        <junit.version>5.10.0</junit.version>
        <jackson.version>2.16.1</jackson.version>
        <jgit.version>7.3.0.202506031305-r</jgit.version>
        <flexmark.version>0.64.8</flexmark.version>
        <assertj.version>3.27.3</assertj.version>
        <picocli.version>4.7.7</picocli.version>
        <quarkus.version>3.24.5</quarkus.version>
        <minio.version>8.5.17</minio.version>
        <rest-assured.version>5.3.0</rest-assured.version>
        <awaitility.version>4.2.1</awaitility.version>
    </properties>

    <dependencies>
        <!-- Core module dependency -->
        <dependency>
            <groupId>dev.shaaf.jgraphlet</groupId>
            <artifactId>jgraphlet</artifactId>
            <version>0.1.0</version>
        </dependency>
        <dependency>
            <groupId>dev.shaaf.waver.llm</groupId>
            <artifactId>waver-llm</artifactId>
            <version>0.1.0</version>
        </dependency>

        <!-- Langchain4j dependencies -->
        <dependency>
            <groupId>dev.langchain4j</groupId>
            <artifactId>langchain4j</artifactId>
            <version>${langchain4j.version}</version>
        </dependency>
        <dependency>
            <groupId>dev.langchain4j</groupId>
            <artifactId>langchain4j-open-ai</artifactId>
            <version>${langchain4j.openai.version}</version>
        </dependency>
        <dependency>
            <groupId>dev.langchain4j</groupId>
            <artifactId>langchain4j-google-ai-gemini</artifactId>
            <version>${langchain4j.gemini.version}</version>
        </dependency>


        <!-- Picocli for CLI -->
        <dependency>
            <groupId>info.picocli</groupId>
            <artifactId>picocli</artifactId>
            <version>${picocli.version}</version>
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>info.picocli</groupId>
                            <artifactId>picocli-codegen</artifactId>
                            <version>${picocli.version}</version>
                        </path>
                    </annotationProcessorPaths>
                </configuration>
            </plugin>

            <!-- Application plugin for executable JAR -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>3.5.1</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <transformers>
                                <transformer
                                        implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                    <mainClass>dev.shaaf.waver.cli.Main</mainClass>
                                </transformer>
                            </transformers>
                            <filters>
                                <filter>
                                    <artifact>*:*</artifact>
                                    <excludes>
                                        <exclude>META-INF/*.SF</exclude>
                                        <exclude>META-INF/*.DSA</exclude>
                                        <exclude>META-INF/*.RSA</exclude>
                                    </excludes>
                                </filter>
                            </filters>
                        </configuration>
                    </execution>
                </executions>
            </plugin>


            <!-- Exec plugin for running the application -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>3.1.0</version>
                <configuration>
                    <mainClass>dev.shaaf.waver.cli.Main</mainClass>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>native</id>
            <build>
                <plugins>
                    <!-- Native image plugin -->
                    <plugin>
                        <groupId>org.graalvm.buildtools</groupId>
                        <artifactId>native-maven-plugin</artifactId>
                        <version>0.10.2</version>
                        <extensions>true</extensions>
                        <executions>
                            <execution>
                                <id>build-native</id>
                                <goals>
                                    <goal>build</goal>
                                </goals>
                                <phase>package</phase>
                            </execution>
                        </executions>
                        <configuration>
                            <classesDirectory>${project.build.outputDirectory}</classesDirectory>
                            <metadataRepository>
                                <enabled>false</enabled>
                            </metadataRepository>
                            <buildArgs>
                                <buildArg>--initialize-at-build-time=dev.shaaf.waver</buildArg>
                                <buildArg>--initialize-at-build-time=dev.langchain4j</buildArg>
                                <buildArg>--initialize-at-build-time=com.fasterxml.jackson</buildArg>
                                <buildArg>--initialize-at-build-time=org.slf4j</buildArg>
                                <buildArg>--initialize-at-build-time=org.yaml.snakeyaml.util.UriEncoder</buildArg>
                                <buildArg>--initialize-at-build-time=org.yaml.snakeyaml.events.ImplicitTuple</buildArg>
                                <buildArg>
                                    --initialize-at-build-time=org.yaml.snakeyaml.external.com.google.gdata.util.common.base.UnicodeEscaper
                                </buildArg>
                                <buildArg>--initialize-at-build-time=org.yaml.snakeyaml.DumperOptions$ScalarStyle
                                </buildArg>
                                <buildArg>--initialize-at-build-time=org.yaml.snakeyaml.nodes.Tag</buildArg>
                                <buildArg>
                                    --initialize-at-build-time=org.yaml.snakeyaml.external.com.google.gdata.util.common.base.PercentEscaper
                                </buildArg>
                                <buildArg>--initialize-at-run-time=io.netty</buildArg>
                                <buildArg>--initialize-at-run-time=dev.langchain4j.internal.RetryUtils</buildArg>
                                <buildArg>--no-fallback</buildArg>
                                <buildArg>--enable-https</buildArg>
                                <buildArg>--enable-url-protocols=https</buildArg>
                                <buildArg>-H:+ReportExceptionStackTraces</buildArg>
                                <buildArg>-H:+UnlockExperimentalVMOptions</buildArg>
                            </buildArgs>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project> 