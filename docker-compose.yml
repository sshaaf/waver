version: '3.8'

# Waver Distributed Architecture Docker Compose
# This file demonstrates the complete Waver platform with all components

services:
  # MinIO Storage Backend
  minio:
    image: minio/minio:latest
    container_name: waver-minio
    ports:
      - "9000:9000"      # API endpoint
      - "9001:9001"      # Web console
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
      MINIO_BUCKETS: "waver-bucket,elastic-bucket"
    volumes:
      - minio_data:/data
      - minio_config:/root/.minio
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    restart: unless-stopped

  # Waver Backend Service (Knative Function)
  waver-backend:
    build:
      context: ./waver-backend
      dockerfile: Dockerfile
      args:
        - MAVEN_OPTS=-Xmx2g
    container_name: waver-backend
    ports:
      - "8080:8080"
    environment:
      # LLM Configuration
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - GEMINI_AI_KEY=${GEMINI_AI_KEY:-}
      - WAVER_LLM_PROVIDER=${WAVER_LLM_PROVIDER:-Gemini}
      - WAVER_OUTPUT_FORMAT=${WAVER_OUTPUT_FORMAT:-MARKDOWN}
      
      # MinIO Configuration
      - MINIO_ENDPOINT=http://minio:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
      - MINIO_BUCKET=waver-bucket
      
      # Application Configuration
      - QUARKUS_HTTP_PORT=8080
      - QUARKUS_LOG_LEVEL=${QUARKUS_LOG_LEVEL:-INFO}
      - QUARKUS_PROFILE=${QUARKUS_PROFILE:-prod}
    depends_on:
      minio:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/q/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    networks:
      - waver-network

  # Waver Site (Next.js Web Interface)
  waver-site:
    build:
      context: ./waver-site
      dockerfile: Dockerfile
      args:
        - NODE_ENV=production
    container_name: waver-site
    ports:
      - "3000:3000"
    environment:
      # Backend Configuration
      - NEXT_PUBLIC_BACKEND_URL=http://waver-backend:8080
      - NEXT_PUBLIC_CLOUD_EVENT_ENDPOINT=http://waver-backend:8080
      
      # MinIO Configuration
      - NEXT_PUBLIC_MINIO_ENDPOINT=http://minio:9000
      - NEXT_PUBLIC_MINIO_BUCKET=waver-bucket
      - NEXT_PUBLIC_MINIO_REGION=us-east-1
      
      # GitHub Integration (Optional)
      - GITHUB_TOKEN=${GITHUB_TOKEN:-}
      
      # Application Configuration
      - NODE_ENV=production
      - PORT=3000
    depends_on:
      waver-backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    networks:
      - waver-network

# Volumes for persistent data
volumes:
  minio_data:
    driver: local
  minio_config:
    driver: local

# Custom network for service communication
networks:
  waver-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

# Health check dependencies
x-healthcheck: &healthcheck
  test: ["CMD", "curl", "-f", "http://localhost:8080/q/health"]
  interval: 30s
  timeout: 10s
  retries: 3
  start_period: 40s
